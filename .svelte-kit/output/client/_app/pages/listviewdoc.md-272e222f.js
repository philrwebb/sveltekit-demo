import{S as t,i as o,s as e,e as a,t as n,k as r,c as l,a as s,g as u,d as i,n as c,b as d,f as p,F as m,H as h}from"../chunks/vendor-e46ca3cc.js";function g(t){let o,e,g,q,f,v,w,b,y,E,C,T,L,R,x,P,k,N,A,D,H,S,G,I,$,M,O,W,j,F,U,z,B,J,K,Q,V,X,Y,Z,_,tt,ot,et,at,nt,rt,lt,st,ut,it,ct,dt,pt,mt;return{c(){o=a("h1"),e=a("a"),g=n("A generic listview - used to present covid statistics"),q=r(),f=a("p"),v=n("The goal was to produce a component that when provided with input of an array of arrays, would render the data as a listview.  For example:"),w=r(),b=a("pre"),y=r(),E=a("p"),C=n("Would be rendered as 4 rows of 5 columns.  Obviously, the component should handle an arbitrary number of rows and also an arbitrary number of columns."),T=r(),L=a("p"),R=n("This can be broken down into three distinct components:"),x=r(),P=a("ul"),k=a("li"),N=n("A Cell component;"),A=r(),D=a("li"),H=n("A Row component;"),S=r(),G=a("li"),I=n("A List component;"),$=r(),M=a("p"),O=n("Starting from the bottom up we have:"),W=r(),j=a("ol"),F=a("li"),U=n("The Cell Component"),z=r(),B=a("pre"),J=r(),K=a("ol"),Q=a("li"),V=n("The Row Component"),X=r(),Y=a("pre"),Z=r(),_=a("ol"),tt=a("li"),ot=n("The List Component"),et=r(),at=a("pre"),nt=r(),rt=a("p"),lt=n("The List component can be used like this:"),st=r(),ut=a("pre"),it=r(),ct=a("p"),dt=n("Unrelated to the problem at hand, I have populated my rowdata from a covid19 statistics repository"),pt=r(),mt=a("pre"),this.h()},l(t){o=l(t,"H1",{id:!0});var a=s(o);e=l(a,"A",{href:!0});var n=s(e);g=u(n,"A generic listview - used to present covid statistics"),n.forEach(i),a.forEach(i),q=c(t),f=l(t,"P",{});var r=s(f);v=u(r,"The goal was to produce a component that when provided with input of an array of arrays, would render the data as a listview.  For example:"),r.forEach(i),w=c(t),b=l(t,"PRE",{class:!0}),s(b).forEach(i),y=c(t),E=l(t,"P",{});var d=s(E);C=u(d,"Would be rendered as 4 rows of 5 columns.  Obviously, the component should handle an arbitrary number of rows and also an arbitrary number of columns."),d.forEach(i),T=c(t),L=l(t,"P",{});var p=s(L);R=u(p,"This can be broken down into three distinct components:"),p.forEach(i),x=c(t),P=l(t,"UL",{});var m=s(P);k=l(m,"LI",{});var h=s(k);N=u(h,"A Cell component;"),h.forEach(i),A=c(m),D=l(m,"LI",{});var ht=s(D);H=u(ht,"A Row component;"),ht.forEach(i),S=c(m),G=l(m,"LI",{});var gt=s(G);I=u(gt,"A List component;"),gt.forEach(i),m.forEach(i),$=c(t),M=l(t,"P",{});var qt=s(M);O=u(qt,"Starting from the bottom up we have:"),qt.forEach(i),W=c(t),j=l(t,"OL",{});var ft=s(j);F=l(ft,"LI",{});var vt=s(F);U=u(vt,"The Cell Component"),vt.forEach(i),ft.forEach(i),z=c(t),B=l(t,"PRE",{class:!0}),s(B).forEach(i),J=c(t),K=l(t,"OL",{start:!0});var wt=s(K);Q=l(wt,"LI",{});var bt=s(Q);V=u(bt,"The Row Component"),bt.forEach(i),wt.forEach(i),X=c(t),Y=l(t,"PRE",{class:!0}),s(Y).forEach(i),Z=c(t),_=l(t,"OL",{start:!0});var yt=s(_);tt=l(yt,"LI",{});var Et=s(tt);ot=u(Et,"The List Component"),Et.forEach(i),yt.forEach(i),et=c(t),at=l(t,"PRE",{class:!0}),s(at).forEach(i),nt=c(t),rt=l(t,"P",{});var Ct=s(rt);lt=u(Ct,"The List component can be used like this:"),Ct.forEach(i),st=c(t),ut=l(t,"PRE",{class:!0}),s(ut).forEach(i),it=c(t),ct=l(t,"P",{});var Tt=s(ct);dt=u(Tt,"Unrelated to the problem at hand, I have populated my rowdata from a covid19 statistics repository"),Tt.forEach(i),pt=c(t),mt=l(t,"PRE",{class:!0}),s(mt).forEach(i),this.h()},h(){d(e,"href","#a-generic-listview---used-to-present-covid-statistics"),d(o,"id","a-generic-listview---used-to-present-covid-statistics"),d(b,"class","language-undefined"),d(B,"class","language-undefined"),d(K,"start","2"),d(Y,"class","language-undefined"),d(_,"start","3"),d(at,"class","language-undefined"),d(ut,"class","language-undefined"),d(mt,"class","language-undefined")},m(t,a){p(t,o,a),m(o,e),m(e,g),p(t,q,a),p(t,f,a),m(f,v),p(t,w,a),p(t,b,a),b.innerHTML='<code class="language-undefined">export const rowsdata = writable(\n    [\n        [&quot;oranges&quot;, &quot;lemons &quot;, &quot;pears  &quot;, &quot;apples &quot;, &quot;melons&quot;],\n        [&quot;black  &quot;, &quot;white  &quot;, &quot;yellow &quot;, &quot;orange &quot;, &quot;pink&quot;],\n        [&quot;hello  &quot;, &quot;goodbye&quot;, &quot;ciao   &quot;, &quot;whatsup&quot;, &quot;ooroo&quot;],\n        [&quot;black  &quot;, &quot;white  &quot;, &quot;yellow &quot;, &quot;orange &quot;, &quot;pink&quot;],\n    ]\n)</code>',p(t,y,a),p(t,E,a),m(E,C),p(t,T,a),p(t,L,a),m(L,R),p(t,x,a),p(t,P,a),m(P,k),m(k,N),m(P,A),m(P,D),m(D,H),m(P,S),m(P,G),m(G,I),p(t,$,a),p(t,M,a),m(M,O),p(t,W,a),p(t,j,a),m(j,F),m(F,U),p(t,z,a),p(t,B,a),B.innerHTML='<code class="language-undefined">    &lt;script&gt;\n        export let cellvalue = &quot;&quot;;\n    &lt;/script&gt;\n\n    &lt;span&gt;&#123;cellvalue&#125;&lt;/span&gt;\n\n    &lt;style scoped&gt;\n        span &#123;\n            border: black 1px solid;\n            padding-left: 2px;\n            padding-top: 1px;\n            padding-bottom: 1px;\n        &#125;\n    &lt;/style&gt;</code>',p(t,J,a),p(t,K,a),m(K,Q),m(Q,V),p(t,X,a),p(t,Y,a),Y.innerHTML='<code class="language-undefined">    &lt;script&gt;\n        import Cell from &quot;./cell.svelte&quot;;\n        export let rowvalue = [];\n        let nocols = rowvalue.length;\n        const gap = &quot;4px&quot;;\n    &lt;/script&gt;\n\n    &lt;span class=&quot;rowcontainer&quot; style=&quot;grid-template-columns: repeat(&#123;nocols&#125;,1fr);grid-gap: &#123;gap&#125;;&quot;&gt;\n        &#123;#each rowvalue as cellvalue&#125;\n            &lt;Cell &#123;cellvalue&#125; /&gt;\n        &#123;/each&#125;\n    &lt;/span&gt;\n\n    &lt;style scoped&gt;\n        .rowcontainer &#123;\n            display: grid;\n        &#125;\n    &lt;/style&gt;</code>',p(t,Z,a),p(t,_,a),m(_,tt),m(tt,ot),p(t,et,a),p(t,at,a),at.innerHTML='<code class="language-undefined">    &lt;script&gt;\n        import Row from &quot;./row.svelte&quot;;\n        export let rowdata;\n        const gap = &quot;5px&quot;;\n    &lt;/script&gt;\n\n    &lt;span class=&quot;listcontainer&quot; style=&quot;grid-gap: &#123;gap&#125;&quot;&gt;\n        &#123;#each rowdata as rowvalue&#125;\n            &lt;Row &#123;rowvalue&#125; style=&quot;grid-gap: &#123;gap&#125;;&quot; /&gt;\n        &#123;:else&#125;\n            No Data Provided\n        &#123;/each&#125;\n    &lt;/span&gt;\n\n    &lt;style&gt;\n        .listcontainer &#123;\n            display: grid;\n        &#125;\n    &lt;/style&gt;</code>',p(t,nt,a),p(t,rt,a),m(rt,lt),p(t,st,a),p(t,ut,a),ut.innerHTML='<code class="language-undefined">    &lt;script&gt;\n        import List from &quot;$lib/listview/list.svelte&quot;;\n        import &#123; rowsdata &#125; from &quot;$lib/stores.js&quot;;\n        let rowdata = [...$rowsdata];\n    &lt;/script&gt;\n\n    &lt;div&gt;\n        &lt;List &#123;rowdata&#125; /&gt;\n    &lt;/div&gt;\n\n    &lt;style&gt;\n        div &#123;\n            width: 100%;\n        &#125;\n    &lt;/style&gt;</code>',p(t,it,a),p(t,ct,a),m(ct,dt),p(t,pt,a),p(t,mt,a),mt.innerHTML='<code class="language-undefined">&lt;script&gt;\n        import http from &quot;$lib/httpStore.js&quot;;\n        import List from &quot;$lib/listview/list.svelte&quot;;\n        import numeral from &quot;numeral&quot;;\n        let rowdata = [];\n        const covidSummary = http(&#123;&#125;);\n        covidSummary.subscribe((value) =&gt; &#123;\n                console.log(value);\n                if (value.Global) &#123;\n                        rowdata = [];\n                        /* Heading Row */\n                        rowdata.push([\n                                &quot;Country&quot;,\n                                &quot;Country Code&quot;,\n                                &quot;New Confirmed&quot;,\n                                &quot;Total Confirmed&quot;,\n                                &quot;New Deaths&quot;,\n                                &quot;Total Deaths&quot;,\n                                &quot;New Recovered&quot;,\n                                &quot;Total Recovered&quot;,\n                        ]);\n                        /* World Data */\n                        rowdata.push([\n                                &quot;World&quot;,\n                                &quot;-&quot;,\n                                numeral(value.Global.NewConfirmed).format(&#39;0,0&#39;),\n                                numeral(value.Global.TotalConfirmed).format(&#39;0,0&#39;),\n                                numeral(value.Global.NewDeaths).format(&#39;0,0&#39;),\n                                numeral(value.Global.TotalDeaths).format(&#39;0,0&#39;),\n                                numeral(value.Global.NewRecovered).format(&#39;0,0&#39;),\n                                numeral(value.Global.TotalRecovered).format(&#39;0,0&#39;),\n                        ]);\n                        /* Country Data */\n                        value.Countries.forEach((element) =&gt; &#123;\n                                rowdata.push([\n                                        element.Country,\n                                        element.CountryCode,\n                                        numeral(element.NewConfirmed).format(&#39;0,0&#39;),\n                                        numeral(element.TotalConfirmed).format(&#39;0,0&#39;),\n                                        numeral(element.NewDeaths).format(&#39;0,0&#39;),\n                                        numeral(element.TotalDeaths).format(&#39;0,0&#39;),\n                                        numeral(element.NewRecovered).format(&#39;0,0&#39;),\n                                        numeral(element.TotalRecovered).format(&#39;0,0&#39;),\n                                ]);\n                        &#125;);\n                        console.log(rowdata);\n                &#125;\n        &#125;);\n        covidSummary.get(&quot;https://api.covid19api.com/summary&quot;);\n&lt;/script&gt;\n \n&#123;#if $covidSummary.Countries &amp;&amp; $covidSummary.Global&#125;\n        &lt;List &#123;rowdata&#125; /&gt;\n&#123;:else&#125;\n        &lt;p&gt;loading&lt;/p&gt;\n&#123;/if&#125;</code>'},p:h,i:h,o:h,d(t){t&&i(o),t&&i(q),t&&i(f),t&&i(w),t&&i(b),t&&i(y),t&&i(E),t&&i(T),t&&i(L),t&&i(x),t&&i(P),t&&i($),t&&i(M),t&&i(W),t&&i(j),t&&i(z),t&&i(B),t&&i(J),t&&i(K),t&&i(X),t&&i(Y),t&&i(Z),t&&i(_),t&&i(et),t&&i(at),t&&i(nt),t&&i(rt),t&&i(st),t&&i(ut),t&&i(it),t&&i(ct),t&&i(pt),t&&i(mt)}}}export default class extends t{constructor(t){super(),o(this,t,null,g,e,{})}}
